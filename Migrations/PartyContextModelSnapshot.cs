// <auto-generated />
using System;
using HackMidwest2018Backend.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HackMidwest2018Backend.Migrations
{
    [DbContext(typeof(PartyContext))]
    partial class PartyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("HackMidwest2018Backend.DatabaseModels.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new { ContactId = 1, FirstName = "Teddy", LastName = "Ivarock", PhoneNumber = "5555555555" },
                        new { ContactId = 2, Email = "tripleTheCharliTripleTheFun@gmail.com", FirstName = "Charlie L", LastName = "Ivarock", PhoneNumber = "5555555555" }
                    );
                });

            modelBuilder.Entity("HackMidwest2018Backend.DatabaseModels.Contribution", b =>
                {
                    b.Property<int>("ContributionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contributer");

                    b.Property<string>("Description");

                    b.Property<int>("EventId");

                    b.HasKey("ContributionId");

                    b.HasIndex("EventId");

                    b.ToTable("Contributions");

                    b.HasData(
                        new { ContributionId = 1, Description = "10 pounds of ground beef", EventId = 1 }
                    );
                });

            modelBuilder.Entity("HackMidwest2018Backend.DatabaseModels.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("OwnerContactId");

                    b.HasKey("EventId");

                    b.HasIndex("OwnerContactId");

                    b.ToTable("Events");

                    b.HasData(
                        new { EventId = 2, Description = "I'm lonely and need a party", Name = "Teddy's house warming", OwnerContactId = 1 },
                        new { EventId = 1, Description = "Party!", Name = "Charlie Board gaming", OwnerContactId = 2 }
                    );
                });

            modelBuilder.Entity("HackMidwest2018Backend.DatabaseModels.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EventDate");

                    b.Property<int>("EventId");

                    b.HasKey("ScheduleId");

                    b.HasIndex("EventId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new { ScheduleId = 1, EventDate = new DateTime(2018, 7, 21, 22, 43, 35, 753, DateTimeKind.Local), EventId = 1 }
                    );
                });

            modelBuilder.Entity("HackMidwest2018Backend.DatabaseModels.Contribution", b =>
                {
                    b.HasOne("HackMidwest2018Backend.DatabaseModels.Event", "Event")
                        .WithMany("Contributions")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HackMidwest2018Backend.DatabaseModels.Event", b =>
                {
                    b.HasOne("HackMidwest2018Backend.DatabaseModels.Contact", "Owner")
                        .WithMany("OwnedEvents")
                        .HasForeignKey("OwnerContactId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HackMidwest2018Backend.DatabaseModels.Schedule", b =>
                {
                    b.HasOne("HackMidwest2018Backend.DatabaseModels.Event", "Event")
                        .WithMany("Schedules")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
